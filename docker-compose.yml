version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: xray-mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: xray-iot-system
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - xray-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: xray-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - xray-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xray-app
    restart: always
    env_file:
      - .env.docker
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://mongodb:27017/xray-iot-system
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      RABBITMQ_QUEUE: xray-queue
      RABBITMQ_EXCHANGE: xray-exchange
      RABBITMQ_ROUTING_KEY: xray.data
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - xray-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/signals', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  xray-network:
    driver: bridge